create database Facebook;
use Facebook;

CREATE TABLE users(
  User_ID INT NOT NULL auto_increment,
  Email_ID VARCHAR(25) NOT NULL,
  Phone_No CHAR(10) NOT NULL,
  Pass_word VARCHAR(20) NOT NULL,
  First_name VARCHAR(20) NOT NULL,
  Last_name VARCHAR(20),
  City VARCHAR(20),
  PinCode INT,
  DOB DATE NOT NULL,
  Gender CHAR(10),
  PRIMARY KEY(User_ID));
  
desc users;
ALTER TABLE users AUTO_INCREMENT=1;

insert into users (Email_ID,Phone_No,Pass_word,First_name,Last_name,City,PinCode,DOB,Gender) values ('sbmech@gmail.com','7895546456','afas','shubham','badhe','faizpur',487645,DATE '1998-04-19','M');
insert into users (Email_ID,Phone_No,Pass_word,First_name,Last_name,City,PinCode,DOB,Gender) values ('agmech@gmail.com','9795546456','fkdj','amit','gade','yawal',789645,DATE '1998-10-17','M');
insert into users (Email_ID,Phone_No,Pass_word,First_name,Last_name,City,PinCode,DOB,Gender) values ('udelec@gmail.com','9725546456','sfgks','udit','nemade','jalgaon',456645,DATE '1997-05-22','M');
insert into users (Email_ID,Phone_No,Pass_word,First_name,Last_name,City,PinCode,DOB,Gender) values ('mpmech@gmail.com','9745546456','rwee','manish','patil','savda',16645,DATE '1997-02-02','M');
insert into users (Email_ID,Phone_No,Pass_word,First_name,Last_name,City,PinCode,DOB,Gender) values ('npinst@gmail.com','9785546456','yjgdhf','naman','patil','bhusawal',798645,DATE '1998-12-15','M');
insert into users (Email_ID,Phone_No,Pass_word,First_name,Last_name,City,PinCode,DOB,Gender) values ('nscomp@gmail.com','987456123','afas','nikhil','shrikhande','muktainagar',425503,DATE '1996-03-20','M');
insert into users (Email_ID,Phone_No,Pass_word,First_name,Last_name,City,PinCode,DOB,Gender) values ('ucmech@gmail.com','978456123','fkdj','umesh','chaudhari','mumbai',485612,DATE '1996-09-12','M');
insert into users (Email_ID,Phone_No,Pass_word,First_name,Last_name,City,PinCode,DOB,Gender) values ('tpmech@gmail.com','9021564578','sfgks','tejas','patil','chopda',456879,DATE '1995-08-21','M');
insert into users (Email_ID,Phone_No,Pass_word,First_name,Last_name,City,PinCode,DOB,Gender) values ('apmech@gmail.com','8975152348','rwee','abhishek','patil','dasnur',784512,DATE '1999-04-09','M');
insert into users (Email_ID,Phone_No,Pass_word,First_name,Last_name,City,PinCode,DOB,Gender) values ('kpmech@gmail.com','9756863285','yjgdhf','kishor','pandit','pachora',798947,DATE '1994-12-18','M');
select * from users;

CREATE TABLE posts(
   Post_ID INT NOT NULL auto_increment,
   Posted_User_ID INT NOT NULL,
   Post_Date DATE NOT NULL,
   Post_Content VARCHAR(50) NOT NULL,
   PRIMARY KEY(Post_ID));

ALTER TABLE posts AUTO_INCREMENT=1;
ALTER TABLE posts ADD CONSTRAINT Post_User_fk FOREIGN KEY (Posted_User_ID) references users(User_ID);
desc posts;

insert into posts(Posted_User_ID,Post_Date,Post_Content) values(2,DATE '2020-09-19','first image');
insert into posts(Posted_User_ID,Post_Date,Post_Content) values(3,DATE '2019-08-20','second image');
insert into posts(Posted_User_ID,Post_Date,Post_Content) values(4,DATE '2018-07-21','fourth image');
insert into posts(Posted_User_ID,Post_Date,Post_Content) values(5,DATE '2017-06-22','fifth image');
insert into posts(Posted_User_ID,Post_Date,Post_Content) values(1,DATE '2016-05-23','sixth image');
insert into posts(Posted_User_ID,Post_Date,Post_Content) values(2,DATE '2015-04-24','seventh image');
insert into posts(Posted_User_ID,Post_Date,Post_Content) values(3,DATE '2014-03-25','eighth image');
insert into posts(Posted_User_ID,Post_Date,Post_Content) values(4,DATE '2013-02-26','nineth image');
select * from posts;

CREATE TABLE post_shares(
  Post_ID INT NOT NULL,
  Shared_User_ID INT NOT NULL,
  PRIMARY KEY(Post_ID,Shared_User_ID));
  
ALTER TABLE post_shares ADD CONSTRAINT Shared_Post_ID_fk FOREIGN KEY (Post_ID) references posts(Post_ID);
ALTER TABLE post_shares ADD CONSTRAINT Shared_User_ID_fk FOREIGN KEY (Shared_User_ID) references users(User_ID); 
desc post_shares;

insert into post_shares values(1,2);
insert into post_shares values(4,5);
insert into post_shares values(3,3);
insert into post_shares values(2,4);
insert into post_shares values(5,3);
insert into post_shares values(5,2);
insert into post_shares values(6,1);
insert into post_shares values(6,3);
select * from post_shares;

CREATE TABLE post_likes(
  Post_ID INT NOT NULL,
  Liked_User_ID INT NOT NULL,
  PRIMARY KEY(Post_ID,Liked_User_ID));
  
ALTER TABLE post_likes ADD CONSTRAINT Liked_Post_ID_fk FOREIGN KEY (Post_ID) references posts(Post_ID);
ALTER TABLE post_likes ADD CONSTRAINT Liked_User_ID_fk FOREIGN KEY (Liked_User_ID) references users(User_ID);
desc post_likes;

insert into post_likes values(1,2);
insert into post_likes values(2,5);
insert into post_likes values(3,1);
insert into post_likes values(4,3);
insert into post_likes values(5,4);
insert into post_likes values(3,4);
insert into post_likes values(2,4);
insert into post_likes values(1,4);
select * from post_likes;

CREATE TABLE post_comments(
  Comment_ID INT NOT NULL auto_increment,
  Post_ID INT NOT NULL,
  Commented_Date DATE,
  Comment_Content VARCHAR(50),
  Commented_User_ID INT NOT NULL,
  PRIMARY KEY(Comment_ID));

ALTER TABLE post_comments AUTO_INCREMENT=1;
ALTER TABLE post_comments ADD CONSTRAINT Commented_Post_ID_fk FOREIGN KEY (Post_ID) references posts(Post_ID);
ALTER TABLE post_comments ADD CONSTRAINT Commented_User_ID_fk FOREIGN KEY (Commented_User_ID) references users(User_ID);
desc post_comments;

insert into post_comments(Post_id,Commented_Date,Comment_Content,Commented_User_ID) values(4,DATE '2020-05-14','hiiii .. ',3); 
insert into post_comments(Post_id,Commented_Date,Comment_Content,Commented_User_ID) values(3,DATE '2019-03-23','hooo .. ',4); 
insert into post_comments(Post_id,Commented_Date,Comment_Content,Commented_User_ID) values(2,DATE '2018-04-22','okkkk .. ',5); 
insert into post_comments(Post_id,Commented_Date,Comment_Content,Commented_User_ID) values(4,DATE '2017-05-11','nooop .. ',2);
insert into post_comments(Post_id,Commented_Date,Comment_Content,Commented_User_ID) values(5,DATE '2014-06-15','nice .. ',3);
insert into post_comments(Post_id,Commented_Date,Comment_Content,Commented_User_ID) values(3,DATE '2013-07-21','good .. ',1);
insert into post_comments(Post_id,Commented_Date,Comment_Content,Commented_User_ID) values(2,DATE '2012-08-17','very good..',1);
insert into post_comments(Post_id,Commented_Date,Comment_Content,Commented_User_ID) values(3,DATE '2011-09-01','super .. ',4);
select * from post_comments;

CREATE TABLE pages(
   Page_ID INT NOT NULL auto_increment,
   Page_Name VARCHAR(20) NOT NULL,
   Page_Content VARCHAR(50) NOT NULL,
   PRIMARY KEY(Page_ID));
   
ALTER TABLE pages AUTO_INCREMENT=1;
desc pages;

insert into pages(Page_Name,Page_Content) values("first name","first content");
insert into pages(Page_Name,Page_Content) values("second name","second content");
insert into pages(Page_Name,Page_Content) values("third name","third content");
insert into pages(Page_Name,Page_Content) values("fourth name","fourth content");
insert into pages(Page_Name,Page_Content) values("fifth name","fifth content");
insert into pages(Page_Name,Page_Content) values("sixth name","sixth content");
insert into pages(Page_Name,Page_Content) values("seventh name","seventh content");
select * from pages;

CREATE TABLE page_likes(
  Page_ID INT NOT NULL,
  Page_User_ID INT NOT NULL,
  PRIMARY KEY(Page_ID,Page_User_ID));
  
ALTER TABLE page_likes ADD CONSTRAINT Page_ID_fk FOREIGN KEY (Page_ID) references pages(Page_ID);
ALTER TABLE page_likes ADD CONSTRAINT Page_User_ID_fk FOREIGN KEY (Page_User_ID) references users(User_ID);
desc page_likes;

insert into page_likes values(1,1);
insert into page_likes values(3,1);
insert into page_likes values(4,2);
insert into page_likes values(5,4);
insert into page_likes values(7,2);
insert into page_likes values(3,3);
insert into page_likes values(2,1);
insert into page_likes values(1,5);
select * from page_likes;

CREATE TABLE friends(
   User_ID INT NOT NULL,
   Friend_ID INT NOT NULL,
   PRIMARY KEY(User_ID,Friend_ID));

ALTER TABLE friends ADD CONSTRAINT User_ID_fk FOREIGN KEY (User_ID) references users(User_ID); 
ALTER TABLE friends ADD CONSTRAINT Friend_ID_fk FOREIGN KEY (Friend_ID) references users(User_ID);
desc friends;

insert into friends values(1,2);
insert into friends values(1,3);
insert into friends values(1,4);
insert into friends values(2,3);
insert into friends values(5,3);
insert into friends values(4,3);
insert into friends values(1,5);
select * from friends;

CREATE TABLE comments_like(
  Comment_ID INT NOT NULL,
  Comment_liked_User_ID INT NOT NULL,
  PRIMARY KEY (Comment_ID,Comment_liked_User_ID));
  
ALTER TABLE comments_like ADD CONSTRAINT Comment_ID_fk FOREIGN KEY (Comment_ID) references post_comments(Comment_ID) ;
ALTER TABLE comments_like ADD CONSTRAINT Comment_liked_user_ID_fk FOREIGN KEY (Comment_liked_User_ID) references users(User_ID);
desc comments_like;

insert into comments_like values(2,1);
insert into comments_like values(4,2);
insert into comments_like values(3,3);
insert into comments_like values(6,4);
insert into comments_like values(2,5);
insert into comments_like values(3,4);
insert into comments_like values(4,3);
insert into comments_like values(5,2);
insert into comments_like values(6,1);
select * from comments_like;



                          -- join
                          
select user_id,p.post_id from users u,posts p where u.user_id=p.posted_user_id;
select u.user_id as  "users id",p.post_id as "posts id" from users u join posts p on p.posted_user_id=u.user_id;

                        -- Finding users
                        
delimiter $$
create procedure search_user_name(IN iname varchar(20))
begin
select *from Users where first_name=iname;
end $$

call search_user_name('shubham');

                          -- Friends 
                          
delimiter $$
create procedure number_of_friends()
begin
select user_id,count(distinct friend_id)
from Friends
group by user_id;
end $$

call number_of_friends();


                         -- trigger
                         
create table deleted_comment as select * from post_comments;
truncate deleted_comment;

delimiter $$
create trigger post_comments1
after delete
on post_comments
for each row
begin
insert into deleted_comment(
comment_id ,post_id, Commented_Date ,comment_content ,commented_user_id)
values (old.comment_id, old.post_id, old.commented_date, old.comment_content, old.commented_user_id);
end $$
delimiter ;  
drop trigger post_comments1;
delete from post_comments where commented_date = '2012-08-17';

select * from deleted_comment;
                         

